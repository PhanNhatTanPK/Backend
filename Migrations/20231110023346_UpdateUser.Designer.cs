// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(TrangTraiContext))]
    [Migration("20231110023346_UpdateUser")]
    partial class UpdateUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Backend.Models.CNATDBTTGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiGiaCam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayATDB")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoATDB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiGiaCam");

                    b.ToTable("CNATDBTTGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNATDBTTGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiDaiGiaSuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayATDB")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoADTB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiDaiGiaSuc");

                    b.ToTable("CNATDBTTGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNATDBTTHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiHeo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayATDB")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoATDB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiHeo");

                    b.ToTable("CNATDBTTHeo");
                });

            modelBuilder.Entity("Backend.Models.CNDKCNTTGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiGiaCam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayDKCN")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiGiaCam");

                    b.ToTable("CNDKCNTTGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNDKCNTTGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiDaiGiaSuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayDKCN")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiDaiGiaSuc");

                    b.ToTable("CNDKCNTTGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNDKCNTTHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiHeo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayDKCN")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiHeo");

                    b.ToTable("CNDKCNTTHeo");
                });

            modelBuilder.Entity("Backend.Models.CNVSTPTTGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiGiaCam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVSTP")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoVSTP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiGiaCam");

                    b.ToTable("CNVSTPTTGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNVSTPTTGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiDaiGiaSuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVSTP")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoVSTP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiDaiGiaSuc");

                    b.ToTable("CNVSTPTTGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNVSTPTTHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiHeo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVSTP")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoVSTP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiHeo");

                    b.ToTable("CNVSTPTTHeo");
                });

            modelBuilder.Entity("Backend.Models.CNVietGAHPTTGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiGiaCam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVietGAHP")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoVietGAHP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiGiaCam");

                    b.ToTable("CNVietGAHPTTGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNVietGAHPTTGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiDaiGiaSuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVietGAHP")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoVietGAHP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiDaiGiaSuc");

                    b.ToTable("CNVietGAHPTTGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNVietGAHPTTHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangTraiHeo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVietGAHP")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoVietGAHP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrangTraiHeo");

                    b.ToTable("CNVietGAHPTTHeo");
                });

            modelBuilder.Entity("Backend.Models.CoSoGietMo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CanBoDieuTra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChuTrangTrai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CongSuatGietMo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLoaiTrangTrai")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsBanPhan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBiogas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChon")
                        .HasColumnType("bit");

                    b.Property<string>("IsCungCapSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDoBaoHo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDot")
                        .HasColumnType("bit");

                    b.Property<string>("IsGiayChungNhanGiamSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsGiayKiemDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsGiayPhepGietMo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsHamTuHuy")
                        .HasColumnType("bit");

                    b.Property<string>("IsHinhThucSoHuu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsLamLongTachBiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsLoaiHinhGietMo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsLuocChinChoCa")
                        .HasColumnType("bit");

                    b.Property<string>("IsMuaGiaSuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsNguonGocDongVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsNoiTieuThu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPhuongThucGietMo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsThaiRaHoCa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsThaiRaSuoi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsThaiTrucTiepRaVuon")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsThaiXuongHoThu")
                        .HasColumnType("bit");

                    b.Property<string>("IsTuongLat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTuongRaoBaoQuanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsViTriGietMo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LatitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("LoaiDongVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LongitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<DateTime?>("NgayBaoCao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoBaoCao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHoThamGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNguoiThamGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("IdLoaiTrangTrai");

                    b.ToTable("CoSoGietMo");
                });

            modelBuilder.Entity("Backend.Models.Dich", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTrangTrai")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SoGiaSucBenh")
                        .HasColumnType("int");

                    b.Property<string>("TenBenhNghiNgo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dich");
                });

            modelBuilder.Entity("Backend.Models.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("District");
                });

            modelBuilder.Entity("Backend.Models.LoaiBenhGiaCam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TenLoaiGiaCam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiBenhGiaCam");
                });

            modelBuilder.Entity("Backend.Models.LoaiBenhGiaSuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TenLoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiBenhGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.LoaiBenhHeo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TenLoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiBenhHeo");
                });

            modelBuilder.Entity("Backend.Models.LoaiGiaCam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TenLoaiGiaCam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.LoaiGiaSuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TenLoaiGiaSuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.LoaiTrangTrai", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("LoaiTrangTraiChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiTrangTrai");
                });

            modelBuilder.Entity("Backend.Models.SaveBufferPandemic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Distance")
                        .HasColumnType("int");

                    b.Property<decimal?>("LatitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal?>("LongitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SaveBufferPandemic");
                });

            modelBuilder.Entity("Backend.Models.TiemPhongDaiGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("IdLoaiBenh")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLoaiGiaSuc")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTrangTraiDaiGiaSuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KetQuaGiamSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiGiaSucTiemPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTiemPhong")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiCungCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDuocTiemPhong")
                        .HasColumnType("int");

                    b.Property<string>("TenVaccine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiBenh");

                    b.HasIndex("IdLoaiGiaSuc");

                    b.HasIndex("IdTrangTraiDaiGiaSuc");

                    b.ToTable("TiemPhongDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.TiemPhongGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("IdLoaiBenh")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLoaiGiaCam")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTrangTraiGiaCam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KetQuaGiamSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiGiaCamTiemPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTiemPhong")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiCungCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDuocTiemPhong")
                        .HasColumnType("int");

                    b.Property<string>("TenVaccine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiBenh");

                    b.HasIndex("IdLoaiGiaCam");

                    b.HasIndex("IdTrangTraiGiaCam");

                    b.ToTable("TiemPhongGiaCam");
                });

            modelBuilder.Entity("Backend.Models.TiemPhongTrangTraiHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("IdLoaiBenh")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTrangTraiHeo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KetQuaGiamSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTiemPhong")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiCungCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDuocTiemPhong")
                        .HasColumnType("int");

                    b.Property<string>("TenVaccine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiBenh");

                    b.HasIndex("IdTrangTraiHeo");

                    b.ToTable("TiemPhongTrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.TinhHinhDichBenhDaiGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BienPhapXuLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdLoaiBenh")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTrangTraiDaiGiaSuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KetQuaXetNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiVaccine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoBenh")
                        .HasColumnType("int");

                    b.Property<int?>("SoChet")
                        .HasColumnType("int");

                    b.Property<int?>("SoKhoiBenh")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiDiemKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiDiemPhatBenh")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiBenh");

                    b.HasIndex("IdTrangTraiDaiGiaSuc");

                    b.ToTable("TinhHinhDichBenhDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.TinhHinhDichBenhGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BienPhapXuLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdLoaiBenh")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTrangTraiGiaCam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KetQuaXetNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiVaccine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoBenh")
                        .HasColumnType("int");

                    b.Property<int?>("SoChet")
                        .HasColumnType("int");

                    b.Property<int?>("SoKhoiBenh")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiDiemKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiDiemPhatBenh")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiBenh");

                    b.HasIndex("IdTrangTraiGiaCam");

                    b.ToTable("TinhHinhDichBenhGiaCam");
                });

            modelBuilder.Entity("Backend.Models.TinhHinhDichBenhTraiHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BienPhapXuLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdLoaiBenh")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTrangTraiHeo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KetQuaXetNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiVaccine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoBenh")
                        .HasColumnType("int");

                    b.Property<int?>("SoChet")
                        .HasColumnType("int");

                    b.Property<int?>("SoKhoiBenh")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiDiemKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiDiemPhatBenh")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiBenh");

                    b.HasIndex("IdTrangTraiHeo");

                    b.ToTable("TinhHinhDichBenhTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiDaiGiaSuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ATDBBenhKhac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanBoDieuTra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChuTrangTrai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DucGiong")
                        .HasColumnType("int");

                    b.Property<int?>("Giong")
                        .HasColumnType("int");

                    b.Property<string>("HinhThucChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdLoaiGiaSuc")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLoaiTrangTrai")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsADTB")
                        .HasColumnType("bit");

                    b.Property<string>("IsBanTuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsChon")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDanhGiaTacDongMoiTruong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDot")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGiengDao")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGiengKhoan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHamTuHuy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHangRaoHo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHangRaoKin")
                        .HasColumnType("bit");

                    b.Property<string>("IsHeThongBiogas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsKeHoachBaoVeMoiTruong")
                        .HasColumnType("bit");

                    b.Property<string>("IsKhaiBaoNhap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsKhaiBaoXuat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsLuocChinChoCa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNguonNuocKhongQuaXuLy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNhapDiaPhuong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNhapNgoaiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("IsQuyHoachChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsQuyHoachNgoai")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuyHoachTrong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatGiong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatSua")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatThit")
                        .HasColumnType("bit");

                    b.Property<string>("IsSoTheoDoiChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThaiTrucTiep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThaiXuongHo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThuGom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTruyXuatNguonGoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTuSanXuat")
                        .HasColumnType("bit");

                    b.Property<string>("IsUPhanViSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsXacNhanDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LatitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LongitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<DateTime?>("NgayADTB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVIETGAHP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXacNhanDKCN")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NguonNuocQuaXuLy")
                        .HasColumnType("bit");

                    b.Property<int?>("SinhSan")
                        .HasColumnType("int");

                    b.Property<string>("SoADTB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoChungNhanDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDayChuongHo")
                        .HasColumnType("int");

                    b.Property<int?>("SoDayChuongKin")
                        .HasColumnType("int");

                    b.Property<string>("SoVIETGAHP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sua")
                        .HasColumnType("int");

                    b.Property<string>("TenTrai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TongDan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("IdLoaiGiaSuc");

                    b.HasIndex("IdLoaiTrangTrai");

                    b.ToTable("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiGiaCam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BenhKhac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BienPhapKhac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChuTrangTrai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoCauGiong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CongTyThue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DienTichKhuXuLy")
                        .HasColumnType("float");

                    b.Property<long?>("DienTichTrangTrai")
                        .HasColumnType("bigint");

                    b.Property<long?>("DienTichXayDungChuong")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("GiaCam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("H5N1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HamBiogas")
                        .HasColumnType("float");

                    b.Property<string>("HinhThucChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HoSinhHoc")
                        .HasColumnType("float");

                    b.Property<long?>("IdLoaiGiaCam")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLoaiTrangTrai")
                        .HasColumnType("bigint");

                    b.Property<string>("IsBanTuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBaoCaoSoLieuChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBiogas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsChon")
                        .HasColumnType("bit");

                    b.Property<string>("IsChungNhanDieuKienChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsChuoiGaATBDXuatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDot")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGaLongMau")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGaLongTrang")
                        .HasColumnType("bit");

                    b.Property<string>("IsGiayPhepXayDungTrai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsGiengDao")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGiengKhoan")
                        .HasColumnType("bit");

                    b.Property<string>("IsH5N1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsHangRaoHo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHangRaoKin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHoSatTrung")
                        .HasColumnType("bit");

                    b.Property<string>("IsHopDongXuLyRac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsKhongCoHeThongTieuDoc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKhongCoTuong")
                        .HasColumnType("bit");

                    b.Property<string>("IsKiemTraDinhKy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsLuocChinChoCa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMayPhunThuocTrung")
                        .HasColumnType("bit");

                    b.Property<string>("IsNewcastle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNguonNuocKhongQuaXuLy")
                        .HasColumnType("bit");

                    b.Property<string>("IsNhaChuaPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPhongKhuTrung")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuyHoachNgoai")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuyHoachTrong")
                        .HasColumnType("bit");

                    b.Property<string>("IsQuyetDinhChuTruongDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSanXuatGiong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatThit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatTrung")
                        .HasColumnType("bit");

                    b.Property<string>("IsSoTheoDoiChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThaiXuongHo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThucAnChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThuocVungATDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTuongLuoiB40")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTuongXay")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVietGAHP")
                        .HasColumnType("bit");

                    b.Property<bool?>("KeHoachBaoVeMoiTruong")
                        .HasColumnType("bit");

                    b.Property<bool?>("Khac")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LatitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LongitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("Newcastle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayChungNhanATDB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayChungNhanDKCN")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayChungNhanVSTP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVietGAHP")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NguonNuocQuaXuLy")
                        .HasColumnType("bit");

                    b.Property<long?>("QuyMo")
                        .HasColumnType("bigint");

                    b.Property<string>("QuyetDinhChuTruongDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QuyetDinhPheDuyetMoiTruong")
                        .HasColumnType("bit");

                    b.Property<string>("SoChungNhanATDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoChungNhanDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoChungNhanVSTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDayChuongHo")
                        .HasColumnType("int");

                    b.Property<int?>("SoDayChuongKin")
                        .HasColumnType("int");

                    b.Property<string>("SoVietGAHP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTyDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("IdLoaiGiaCam");

                    b.HasIndex("IdLoaiTrangTrai");

                    b.ToTable("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiHeo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BienPhapKhac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChuTrangTrai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoCauGiong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CongTyThue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DienTichChuong")
                        .HasColumnType("float");

                    b.Property<double?>("DienTichKhuXuLy")
                        .HasColumnType("float");

                    b.Property<double?>("DienTichTrangTrai")
                        .HasColumnType("float");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DucGiong")
                        .HasColumnType("int");

                    b.Property<double?>("HamBiogas")
                        .HasColumnType("float");

                    b.Property<int?>("HeoCaiSua")
                        .HasColumnType("int");

                    b.Property<int?>("HeoConTheoMe")
                        .HasColumnType("int");

                    b.Property<int?>("HeoNai")
                        .HasColumnType("int");

                    b.Property<int?>("HeoThit")
                        .HasColumnType("int");

                    b.Property<string>("HinhThucChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HoSinhHoc")
                        .HasColumnType("float");

                    b.Property<long?>("IdLoaiTrangTrai")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsATDBDichTa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsATDBDichTaChauPhi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsATDBLMLM")
                        .HasColumnType("bit");

                    b.Property<string>("IsBanTuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBaoCaoSoLieu")
                        .HasColumnType("bit");

                    b.Property<string>("IsBeXuLyHoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBiogas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsChon")
                        .HasColumnType("bit");

                    b.Property<string>("IsChungNhanDieuKienChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDot")
                        .HasColumnType("bit");

                    b.Property<string>("IsGiayPhepXayDungTrai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsGiengDao")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGiengKhoan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHangRaoHo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHangRaoKin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHoSatTrung")
                        .HasColumnType("bit");

                    b.Property<string>("IsHopDongXuLyRac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsKhaiBaoNhap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsKhaiBaoXuat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsKhongCoHeThongTieuDoc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKhongCoTuong")
                        .HasColumnType("bit");

                    b.Property<string>("IsKiemTraDinhKy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsLuocChinChoCa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMayPhunThuocTrung")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNguonNuocKhongQuaXuLy")
                        .HasColumnType("bit");

                    b.Property<string>("IsNhaChuaPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNhapDiaPhuong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNhapNgoaiTinh")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPhongKhuTrung")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuyHoachNgoai")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuyHoachTrong")
                        .HasColumnType("bit");

                    b.Property<string>("IsQuyetDinhChuTruongDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSanXuatGiong")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatHonHop")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanXuatThit")
                        .HasColumnType("bit");

                    b.Property<string>("IsSoTheoDoiChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThaiXuongHo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThucAnChanNuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTuSanXuat")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTuongLuoiB40")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTuongXay")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVietGAHP")
                        .HasColumnType("bit");

                    b.Property<bool?>("KeHoachBaoVeMoiTruong")
                        .HasColumnType("bit");

                    b.Property<bool?>("Khac")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LatitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LongitudeNumber")
                        .HasColumnType("decimal(18,10)");

                    b.Property<DateTime?>("NgayChungNhanATDB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayChungNhanDKCN")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayChungNhanVSTP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVietGAHP")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NguonNuocQuaXuLy")
                        .HasColumnType("bit");

                    b.Property<int?>("QuyMo")
                        .HasColumnType("int");

                    b.Property<string>("QuyetDinhChuTruongDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QuyetDinhPheDuyetMoiTruong")
                        .HasColumnType("bit");

                    b.Property<string>("SoChungNhanATDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoChungNhanDKCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoChungNhanVSTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDayChuongHo")
                        .HasColumnType("int");

                    b.Property<int?>("SoDayChuongKin")
                        .HasColumnType("int");

                    b.Property<string>("SoVietGAHP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTyDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("IdLoaiTrangTrai");

                    b.ToTable("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiTheoHuyen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Bo")
                        .HasColumnType("int");

                    b.Property<int?>("BoCaiSinhSan")
                        .HasColumnType("int");

                    b.Property<int?>("BoCau")
                        .HasColumnType("int");

                    b.Property<int?>("BoDuc")
                        .HasColumnType("int");

                    b.Property<int?>("ChimCut")
                        .HasColumnType("int");

                    b.Property<int?>("Cho")
                        .HasColumnType("int");

                    b.Property<int?>("Cuu")
                        .HasColumnType("int");

                    b.Property<int?>("DaDieu")
                        .HasColumnType("int");

                    b.Property<int?>("De")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<int?>("GaThit")
                        .HasColumnType("int");

                    b.Property<int?>("GaTrung")
                        .HasColumnType("int");

                    b.Property<int?>("HuouSao")
                        .HasColumnType("int");

                    b.Property<int?>("LonDucGiong")
                        .HasColumnType("int");

                    b.Property<int?>("LonNai")
                        .HasColumnType("int");

                    b.Property<int?>("LonThit")
                        .HasColumnType("int");

                    b.Property<int?>("Meo")
                        .HasColumnType("int");

                    b.Property<int?>("Ngan")
                        .HasColumnType("int");

                    b.Property<int?>("Ngong")
                        .HasColumnType("int");

                    b.Property<int?>("Ngua")
                        .HasColumnType("int");

                    b.Property<int?>("OngMat")
                        .HasColumnType("int");

                    b.Property<string>("TenTrangTrai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tho")
                        .HasColumnType("int");

                    b.Property<int?>("Trau")
                        .HasColumnType("int");

                    b.Property<int?>("VitThit")
                        .HasColumnType("int");

                    b.Property<int?>("VitTroi")
                        .HasColumnType("int");

                    b.Property<int?>("VitTrung")
                        .HasColumnType("int");

                    b.Property<string>("Xa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Yen")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("TrangTraiTheoHuyen");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Backend.Models.CNATDBTTGiaCam", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiGiaCam", "TrangTraiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiGiaCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNATDBTTGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiDaiGiaSuc", "TrangTraiDaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiDaiGiaSuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNATDBTTHeo", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiHeo", "TrangTraiHeo")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiHeo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.CNDKCNTTGiaCam", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiGiaCam", "TrangTraiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiGiaCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNDKCNTTGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiDaiGiaSuc", "TrangTraiDaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiDaiGiaSuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNDKCNTTHeo", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiHeo", "TrangTraiHeo")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiHeo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.CNVSTPTTGiaCam", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiGiaCam", "TrangTraiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiGiaCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNVSTPTTGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiDaiGiaSuc", "TrangTraiDaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiDaiGiaSuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNVSTPTTHeo", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiHeo", "TrangTraiHeo")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiHeo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.CNVietGAHPTTGiaCam", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiGiaCam", "TrangTraiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiGiaCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.CNVietGAHPTTGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiDaiGiaSuc", "TrangTraiDaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiDaiGiaSuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.CNVietGAHPTTHeo", b =>
                {
                    b.HasOne("Backend.Models.TrangTraiHeo", "TrangTraiHeo")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiHeo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.CoSoGietMo", b =>
                {
                    b.HasOne("Backend.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Backend.Models.LoaiTrangTrai", "LoaiTrangTrai")
                        .WithMany()
                        .HasForeignKey("IdLoaiTrangTrai");

                    b.Navigation("District");

                    b.Navigation("LoaiTrangTrai");
                });

            modelBuilder.Entity("Backend.Models.TiemPhongDaiGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.LoaiBenhGiaSuc", "LoaiBenhGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdLoaiBenh");

                    b.HasOne("Backend.Models.LoaiGiaSuc", "LoaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdLoaiGiaSuc");

                    b.HasOne("Backend.Models.TrangTraiDaiGiaSuc", "TrangTraiDaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiDaiGiaSuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBenhGiaSuc");

                    b.Navigation("LoaiGiaSuc");

                    b.Navigation("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.TiemPhongGiaCam", b =>
                {
                    b.HasOne("Backend.Models.LoaiBenhGiaCam", "LoaiBenhGiaCam")
                        .WithMany()
                        .HasForeignKey("IdLoaiBenh");

                    b.HasOne("Backend.Models.LoaiGiaCam", "LoaiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdLoaiGiaCam");

                    b.HasOne("Backend.Models.TrangTraiGiaCam", "TrangTraiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiGiaCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBenhGiaCam");

                    b.Navigation("LoaiGiaCam");

                    b.Navigation("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.TiemPhongTrangTraiHeo", b =>
                {
                    b.HasOne("Backend.Models.LoaiBenhHeo", "LoaiBenhHeo")
                        .WithMany()
                        .HasForeignKey("IdLoaiBenh");

                    b.HasOne("Backend.Models.TrangTraiHeo", "TrangTraiHeo")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiHeo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBenhHeo");

                    b.Navigation("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.TinhHinhDichBenhDaiGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.LoaiBenhGiaSuc", "LoaiBenhGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdLoaiBenh");

                    b.HasOne("Backend.Models.TrangTraiDaiGiaSuc", "TrangTraiDaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiDaiGiaSuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBenhGiaSuc");

                    b.Navigation("TrangTraiDaiGiaSuc");
                });

            modelBuilder.Entity("Backend.Models.TinhHinhDichBenhGiaCam", b =>
                {
                    b.HasOne("Backend.Models.LoaiBenhGiaCam", "LoaiBenhGiaCam")
                        .WithMany()
                        .HasForeignKey("IdLoaiBenh");

                    b.HasOne("Backend.Models.TrangTraiGiaCam", "TrangTraiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiGiaCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBenhGiaCam");

                    b.Navigation("TrangTraiGiaCam");
                });

            modelBuilder.Entity("Backend.Models.TinhHinhDichBenhTraiHeo", b =>
                {
                    b.HasOne("Backend.Models.LoaiBenhHeo", "LoaiBenhHeo")
                        .WithMany()
                        .HasForeignKey("IdLoaiBenh");

                    b.HasOne("Backend.Models.TrangTraiHeo", "TrangTraiHeo")
                        .WithMany()
                        .HasForeignKey("IdTrangTraiHeo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBenhHeo");

                    b.Navigation("TrangTraiHeo");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiDaiGiaSuc", b =>
                {
                    b.HasOne("Backend.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Backend.Models.LoaiGiaSuc", "LoaiGiaSuc")
                        .WithMany()
                        .HasForeignKey("IdLoaiGiaSuc");

                    b.HasOne("Backend.Models.LoaiTrangTrai", "LoaiTrangTrai")
                        .WithMany()
                        .HasForeignKey("IdLoaiTrangTrai");

                    b.Navigation("District");

                    b.Navigation("LoaiGiaSuc");

                    b.Navigation("LoaiTrangTrai");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiGiaCam", b =>
                {
                    b.HasOne("Backend.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Backend.Models.LoaiGiaCam", "LoaiGiaCam")
                        .WithMany()
                        .HasForeignKey("IdLoaiGiaCam");

                    b.HasOne("Backend.Models.LoaiTrangTrai", "LoaiTrangTrai")
                        .WithMany()
                        .HasForeignKey("IdLoaiTrangTrai");

                    b.Navigation("District");

                    b.Navigation("LoaiGiaCam");

                    b.Navigation("LoaiTrangTrai");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiHeo", b =>
                {
                    b.HasOne("Backend.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Backend.Models.LoaiTrangTrai", "LoaiTrangTrai")
                        .WithMany()
                        .HasForeignKey("IdLoaiTrangTrai");

                    b.Navigation("District");

                    b.Navigation("LoaiTrangTrai");
                });

            modelBuilder.Entity("Backend.Models.TrangTraiTheoHuyen", b =>
                {
                    b.HasOne("Backend.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
